bootdo:
  uploadPath: /var/uploaded_files/
logging:
  level:
    root: error
  file: logs/bootdo.log
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/bootdo?useUnicode=true&characterEncoding=utf8
    username: bootdo
    password: bootdo@0401#@!
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
configure:
    cdn:
      echarts: https://cdn.bootcss.com/echarts/4.0.4/echarts.min.js
      bootstrap: https://cdn.bootcss.com/bootstrap/3.3.6/js/bootstrap.min.js
      bootstrapCss: https://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css
      jquery: https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js
      jqueryUI: https://cdn.bootcss.com/jqueryui/1.10.4/jquery-ui.min.js
      math: https://cdn.bootcss.com/mathjs/4.0.1/math.min.js
web:
  login:
    cmd: cmd /c start http://localhost