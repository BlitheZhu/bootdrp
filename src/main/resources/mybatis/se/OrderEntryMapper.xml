<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modular.se.dao.SEOrderEntryDao">

	<select id="get" resultType="com.bootdo.modular.se.domain.SEOrderEntryDO">
		select `id`,`bill_no`,`entry_id`,`entry_name`,`entry_unit`,`entry_price`,`cost_price`,`stock_no`,`stock_name`,`total_qty`,`cost_amount`,`entry_amount`,`discount_amount`,`discount_rate`,`purchase_fee`,`total_amount`,`remark`,`request_bill_no`,`create_time`,`update_time` from se_order_entry where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.modular.se.domain.SEOrderEntryDO">
		select `id`,`bill_no`,`entry_id`,`entry_name`,`entry_unit`,`entry_price`,`cost_price`,`stock_no`,`stock_name`,`total_qty`,`cost_amount`,`entry_amount`,`discount_amount`,`discount_rate`,`purchase_fee`,`total_amount`,`remark`,`request_bill_no`,`create_time`,`update_time` from se_order_entry
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
		  		  <if test="entryId != null and entryId != ''"> and entry_id = #{entryId} </if>
		  		  <if test="entryName != null and entryName != ''"> and entry_name = #{entryName} </if>
		  		  <if test="entryUnit != null and entryUnit != ''"> and entry_unit = #{entryUnit} </if>
		  		  <if test="entryPrice != null and entryPrice != ''"> and entry_price = #{entryPrice} </if>
                  <if test="costPrice != null and costPrice != ''"> and cost_price = #{costPrice} </if>
		  		  <if test="stockNo != null and stockNo != ''"> and stock_no = #{stockNo} </if>
		  		  <if test="stockName != null and stockName != ''"> and stock_name = #{stockName} </if>
		  		  <if test="totalQty != null and totalQty != ''"> and total_qty = #{totalQty} </if>
                  <if test="costAmount != null and costAmount != ''"> and cost_amount = #{costAmount} </if>
		  		  <if test="entryAmount != null and entryAmount != ''"> and entry_amount = #{entryAmount} </if>
		  		  <if test="discountAmount != null and discountAmount != ''"> and discount_amount = #{discountAmount} </if>
		  		  <if test="discountRate != null and discountRate != ''"> and discount_rate = #{discountRate} </if>
		  		  <if test="purchaseFee != null and purchaseFee != ''"> and purchase_fee = #{purchaseFee} </if>
		  		  <if test="totalAmount != null and totalAmount != ''"> and total_amount = #{totalAmount} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="requestBillNo != null and requestBillNo != ''"> and request_bill_no = #{requestBillNo} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by sort asc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from se_order_entry
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
		  		  <if test="entryId != null and entryId != ''"> and entry_id = #{entryId} </if>
		  		  <if test="entryName != null and entryName != ''"> and entry_name = #{entryName} </if>
		  		  <if test="entryUnit != null and entryUnit != ''"> and entry_unit = #{entryUnit} </if>
		  		  <if test="entryPrice != null and entryPrice != ''"> and entry_price = #{entryPrice} </if>
                  <if test="costPrice != null and costPrice != ''"> and cost_price = #{costPrice} </if>
                  <if test="stockNo != null and stockNo != ''"> and stock_no = #{stockNo} </if>
		  		  <if test="stockName != null and stockName != ''"> and stock_name = #{stockName} </if>
		  		  <if test="totalQty != null and totalQty != ''"> and total_qty = #{totalQty} </if>
                  <if test="costAmount != null and costAmount != ''"> and cost_amount = #{costAmount} </if>
		  		  <if test="entryAmount != null and entryAmount != ''"> and entry_amount = #{entryAmount} </if>
		  		  <if test="discountAmount != null and discountAmount != ''"> and discount_amount = #{discountAmount} </if>
		  		  <if test="discountRate != null and discountRate != ''"> and discount_rate = #{discountRate} </if>
		  		  <if test="purchaseFee != null and purchaseFee != ''"> and purchase_fee = #{purchaseFee} </if>
		  		  <if test="totalAmount != null and totalAmount != ''"> and total_amount = #{totalAmount} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="requestBillNo != null and requestBillNo != ''"> and request_bill_no = #{requestBillNo} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.modular.se.domain.SEOrderEntryDO" useGeneratedKeys="true" keyProperty="id">
		insert into se_order_entry
		(
            `bill_no`, `entry_id`, `entry_name`, `entry_unit`, `entry_price`, `cost_price`, `stock_no`, `stock_name`, `total_qty`, `cost_amount`, `entry_amount`,
            `discount_amount`, `discount_rate`, `purchase_fee`, `total_amount`, `remark`, `request_bill_no`, `sort`
		)
		values
		(
            #{billNo}, #{entryId}, #{entryName}, #{entryUnit}, #{entryPrice}, #{costPrice}, #{stockNo}, #{stockName}, #{totalQty}, #{costAmount}, #{entryAmount},
            #{discountAmount}, #{discountRate}, #{purchaseFee}, #{totalAmount}, #{remark}, #{requestBillNo}, #{sort}
		)
        ON DUPLICATE KEY UPDATE
        entry_id= VALUES(entry_id),entry_name= VALUES(entry_name),entry_unit= VALUES(entry_unit),entry_price= VALUES(entry_price),costPrice= VALUES(cost_price),stock_no= VALUES(stock_no),stock_name= VALUES(stock_name),total_qty= VALUES(total_qty),
        cost_amount= VALUES(cost_amount),entry_amount= VALUES(entry_amount),discount_amount= VALUES(discount_amount),discount_rate= VALUES(discount_rate),purchase_fee= VALUES(purchase_fee),total_amount= VALUES(total_amount),
        remark= VALUES(remark),request_bill_no= VALUES(request_bill_no)
	</insert>

    <insert id ="saveBatch" parameterType="java.util.List" >
        insert into se_order_entry
        (
        `bill_no`, `entry_id`, `entry_name`, `entry_unit`, `entry_price`, `cost_price`, `stock_no`, `stock_name`, `total_qty`, `cost_amount`, `entry_amount`,
        `discount_amount`, `discount_rate`, `purchase_fee`, `total_amount`, `remark`, `request_bill_no`, `sort`
        )
        values
        <foreach collection ="list" item="item" index= "index" separator =",">
            (
            #{item.billNo},#{item.entryId},#{item.entryName},#{item.entryUnit},#{item.entryPrice},#{item.costPrice},#{item.stockNo},#{item.stockName},#{item.totalQty},#{item.costAmount}, #{item.entryAmount},#{item.discountAmount},
            #{item.discountRate},#{item.purchaseFee},#{item.totalAmount},#{item.remark},#{item.requestBillNo},#{item.sort}
            )
        </foreach >
    </insert >

    <insert id="saveOrUpdate" parameterType="java.util.List">
        insert into se_order_entry
        (
        `bill_no`, `entry_id`, `entry_name`, `entry_unit`, `entry_price`, `cost_price`, `stock_no`, `stock_name`, `total_qty`, `cost_amount`, `entry_amount`,
        `discount_amount`, `discount_rate`, `purchase_fee`, `total_amount`, `remark`, `request_bill_no`, `sort`
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.billNo},#{item.entryId},#{item.entryName},#{item.entryUnit},#{item.entryPrice},#{item.costPrice},#{item.stockNo},#{item.stockName},#{item.totalQty},#{item.costAmount},#{item.entryAmount},#{item.discountAmount},
            #{item.discountRate},#{item.purchaseFee},#{item.totalAmount},#{item.remark},#{item.requestBillNo},#{item.sort}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        bill_no= VALUES(bill_no),entry_id= VALUES(entry_id),entry_name= VALUES(entry_name),entry_unit= VALUES(entry_unit),entry_price= VALUES(entry_price),costPrice= VALUES(cost_price),stock_no= VALUES(stock_no),stock_name= VALUES(stock_name),total_qty= VALUES(total_qty),
        cost_amount= VALUES(cost_amount),entry_amount= VALUES(entry_amount),discount_amount= VALUES(discount_amount),discount_rate= VALUES(discount_rate),purchase_fee= VALUES(purchase_fee),total_amount= VALUES(total_amount),
        remark= VALUES(remark),request_bill_no= VALUES(request_bill_no)
    </insert>

	<update id="update" parameterType="com.bootdo.modular.se.domain.SEOrderEntryDO">
		update se_order_entry 
		<set>
			<if test="billNo != null">`bill_no` = #{billNo}, </if>
			<if test="entryId != null">`entry_id` = #{entryId}, </if>
			<if test="entryName != null">`entry_name` = #{entryName}, </if>
			<if test="entryUnit != null">`entry_unit` = #{entryUnit}, </if>
			<if test="entryPrice != null">`entry_price` = #{entryPrice}, </if>
            <if test="costPrice != null">`cost_price` = #{costPrice}, </if>
			<if test="stockNo != null">`stock_no` = #{stockNo}, </if>
			<if test="stockName != null">`stock_name` = #{stockName}, </if>
			<if test="totalQty != null">`total_qty` = #{totalQty}, </if>
            <if test="costAmount != null">`cost_amount` = #{costAmount}, </if>
			<if test="entryAmount != null">`entry_amount` = #{entryAmount}, </if>
			<if test="discountAmount != null">`discount_amount` = #{discountAmount}, </if>
			<if test="discountRate != null">`discount_rate` = #{discountRate}, </if>
			<if test="purchaseFee != null">`purchase_fee` = #{purchaseFee}, </if>
			<if test="totalAmount != null">`total_amount` = #{totalAmount}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="requestBillNo != null">`request_bill_no` = #{requestBillNo} </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from se_order_entry where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from se_order_entry where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

    <delete id="delete">
        delete from se_order_entry
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
            <if test="entryId != null and entryId != ''"> and entry_id = #{entryId} </if>
            <if test="entryName != null and entryName != ''"> and entry_name = #{entryName} </if>
            <if test="requestBillNo != null and requestBillNo != ''"> and request_bill_no = #{requestBillNo} </if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach collection="billNos" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </delete>

</mapper>