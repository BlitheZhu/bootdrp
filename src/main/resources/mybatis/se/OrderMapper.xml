<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modular.se.dao.SEOrderDao">

    <sql id="whereSql">
        <where>
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="billDate != null and billDate != ''"> and bill_date = #{billDate} </if>
            <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
            <if test="billType != null and billType != ''"> and bill_type = #{billType} </if>
            <if test="consumerId != null and consumerId != ''"> and consumer_id = #{consumerId} </if>
            <if test="consumerName != null and consumerName != ''"> and consumer_name = #{consumerName} </if>
            <if test="totalQty != null and totalQty != ''"> and total_qty = #{totalQty} </if>
            <if test="costAmount != null and costAmount != ''"> and cost_amount = #{costAmount} </if>
            <if test="entryAmount != null and entryAmount != ''"> and entry_amount = #{entryAmount} </if>
            <if test="discountAmount != null and discountAmount != ''"> and discount_amount = #{discountAmount} </if>
            <if test="discountRate != null and discountRate != ''"> and discount_rate = #{discountRate} </if>
            <if test="purchaseFee != null and purchaseFee != ''"> and purchase_fee = #{purchaseFee} </if>
            <if test="finalAmount != null and finalAmount != ''"> and final_amount = #{finalAmount} </if>
            <if test="paymentAmount != null and paymentAmount != ''"> and payment_amount = #{paymentAmount} </if>
            <if test="expenseFee != null and expenseFee != ''"> and expense_fee = #{expenseFee} </if>
            <if test="totalAmount != null and totalAmount != ''"> and total_amount = #{totalAmount} </if>
            <if test="settleAccount != null and settleAccount != ''"> and settle_account = #{settleAccount} </if>
            <if test="billerId != null and billerId != ''"> and biller_id = #{billerId} </if>
            <if test="billerName != null and billerName != ''"> and biller_name = #{billerName} </if>
            <if test="remark != null and remark != ''"> and remark = #{remark} </if>
            <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
            <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
            <if test="billDateStart != null and billDateStart != ''"> <![CDATA[ and bill_date >= #{billDateStart} ]]> </if>
            <if test="searchText != null and searchText != ''"> and ( bill_no like '%${searchText}%' or  consumer_name like '%${searchText}%' or remark like '%${searchText}%')</if>
            <if test="start != null and start != ''"> and bill_date >= #{start} </if>
            <if test="end != null and end != ''"> <![CDATA[ and bill_date <= #{end} ]]> </if>
            <if test="status != null and status != ''"> and status = #{status} </if>
            <if test="audit != null and audit != ''"> and audit_status = #{audit} </if>
            <if test="billSource != null and billSource != ''"> and bill_source = #{billSource} </if>
            <if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
            <if test="statusNot != null and statusNot.size() > 0"> and status not in
                <foreach item="status" collection="statusNot" open="(" separator="," close=")"> #{status} </foreach>
            </if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach item="billNo" collection="billNos" open="(" separator="," close=")"> #{billNo} </foreach>
            </if>
        </where>
    </sql>
    <sql id="pageSql">
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by bill_date desc, update_time desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </sql>

    <select id="get" resultType="com.bootdo.modular.se.domain.SEOrderDO">
        select `id`,`bill_date`,`bill_no`,`bill_type`,`consumer_id`,`consumer_name`,`total_qty`,`cost_amount`,`entry_amount`,`discount_amount`,`discount_rate`,`purchase_fee`,`final_amount`,`payment_amount`,`expense_fee`,`total_amount`,`status`,`settle_account`,`biller_id`,`biller_name`,`audit_status`,`bill_source`,`remark`,`create_time`,`update_time` from se_order where id = #{value}
    </select>

    <select id="list" resultType="com.bootdo.modular.se.domain.SEOrderDO">
        select `id`,`bill_date`,`bill_no`,`bill_type`,`consumer_id`,`consumer_name`,`total_qty`,`cost_amount`,`entry_amount`,`discount_amount`,`discount_rate`,`purchase_fee`,`final_amount`,`payment_amount`,`expense_fee`,`total_amount`,`status`,`settle_account`,`biller_id`,`biller_name`,`audit_status`,`bill_source`,`remark`,`create_time`,`update_time` from se_order
        <include refid="whereSql"/>
        <include refid="pageSql"/>
    </select>

    <select id="count" resultType="int">
        select count(*) from se_order
        <include refid="whereSql"/>
    </select>

    <insert id="save" parameterType="com.bootdo.modular.se.domain.SEOrderDO" useGeneratedKeys="true" keyProperty="id">
        insert into se_order
        (
            `bill_date`, `bill_no`, `bill_type`, `consumer_id`,`consumer_name`,`total_qty`, `cost_amount`, `entry_amount`, `discount_amount`, `discount_rate`, `purchase_fee`,
            `final_amount`, `payment_amount`, `expense_fee`, `total_amount`, `status`, `settle_account`, `biller_id`, `biller_name`, `audit_status`,`bill_source`, `remark`
        )
        values
        (
            #{billDate}, #{billNo}, #{billType}, #{consumerId},#{consumerName},#{totalQty}, #{costAmount}, #{entryAmount}, #{discountAmount}, #{discountRate}, #{purchaseFee},
            #{finalAmount}, #{paymentAmount}, #{expenseFee}, #{totalAmount}, #{status}, #{settleAccount}, #{billerId}, #{billerName}, #{auditStatus}, #{billSource}, #{remark}
        )
        ON DUPLICATE KEY UPDATE
        bill_date= VALUES(bill_date),bill_type= VALUES(bill_type),consumer_id= VALUES(consumer_id),consumer_name= VALUES(consumer_name),total_qty= VALUES(total_qty),cost_amount= VALUES(cost_amount),entry_amount= VALUES(entry_amount),
        discount_amount= VALUES(discount_amount),discount_rate= VALUES(discount_rate),purchase_fee= VALUES(purchase_fee),final_amount= VALUES(final_amount),payment_amount= VALUES(payment_amount),
        expense_fee= VALUES(expense_fee),total_amount= VALUES(total_amount),status= VALUES(status),settle_account= VALUES(settle_account),biller_id= VALUES(biller_id),biller_name= VALUES(biller_name),audit_status= VALUES(audit_status),bill_source= VALUES(bill_source),remark= VALUES(remark)
    </insert>

    <insert id="saveOrUpdate" parameterType="java.util.List">
        insert into po_order
        (
        `bill_date`, `bill_no`, `bill_type`, `consumer_id`,`consumer_name`,`total_qty`, `cost_amount`, `entry_amount`, `discount_amount`, `discount_rate`, `purchase_fee`,
        `final_amount`, `payment_amount`, `expense_fee`, `total_amount`, `status`, `settle_account`, `biller_id`, `biller_name`, `bill_source`, `audit_status`, `remark`
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{billDate}, #{billNo}, #{billType}, #{consumerId},#{consumerName},#{totalQty}, #{costAmount}, #{entryAmount}, #{discountAmount}, #{discountRate}, #{purchaseFee},
            #{finalAmount}, #{paymentAmount}, #{expenseFee}, #{totalAmount}, #{status}, #{settleAccount}, #{billerId}, #{billerName}, #{billSource}, #{auditStatus}, #{remark}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        bill_date= VALUES(bill_date),bill_type= VALUES(bill_type),consumer_id= VALUES(consumer_id),consumer_name= VALUES(consumer_name),total_qty= VALUES(total_qty),cost_amount= VALUES(cost_amount),entry_amount= VALUES(entry_amount),
        discount_amount= VALUES(discount_amount),discount_rate= VALUES(discount_rate),purchase_fee= VALUES(purchase_fee),final_amount= VALUES(final_amount),payment_amount= VALUES(payment_amount),
        expense_fee= VALUES(expense_fee),total_amount= VALUES(total_amount),status= VALUES(status),settle_account= VALUES(settle_account),biller_id= VALUES(biller_id),biller_name= VALUES(biller_name),audit_status= VALUES(audit_status),bill_source= VALUES(bill_source),remark= VALUES(remark)
    </insert>
	 
	<update id="update" parameterType="com.bootdo.modular.se.domain.SEOrderDO">
		update se_order 
		<set>
			<if test="billDate != null">`bill_date` = #{billDate}, </if>
			<if test="billNo != null">`bill_no` = #{billNo}, </if>
			<if test="billType != null">`bill_type` = #{billType}, </if>
			<if test="consumerId != null">`consumer_id` = #{consumerId}, </if>
			<if test="consumerName != null">`consumer_name` = #{consumerName}, </if>
			<if test="totalQty != null">`total_qty` = #{totalQty}, </if>
            <if test="costAmount != null">`cost_amount` = #{costAmount}, </if>
			<if test="entryAmount != null">`entry_amount` = #{entryAmount}, </if>
			<if test="discountAmount != null">`discount_amount` = #{discountAmount}, </if>
			<if test="discountRate != null">`discount_rate` = #{discountRate}, </if>
			<if test="purchaseFee != null">`purchase_fee` = #{purchaseFee}, </if>
			<if test="finalAmount != null">`final_amount` = #{finalAmount}, </if>
			<if test="paymentAmount != null">`payment_amount` = #{paymentAmount}, </if>
            <if test="expenseFee != null">`expense_fee` = #{expenseFee}, </if>
			<if test="totalAmount != null">`total_amount` = #{totalAmount}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="settleAccount != null">`settle_account` = #{settleAccount}, </if>
			<if test="billerId != null">`biller_id` = #{billerId}, </if>
			<if test="billerName != null">`biller_name` = #{billerName}, </if>
			<if test="billSource != null">`bill_source` = #{billSource}, </if>
			<if test="auditStatus != null">`audit_status` = #{auditStatus}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="cId != null and cId != ''">and id = #{cId}</if>
            <if test="cBillNo != null and cBillNo != ''">and bill_no =#{cBillNo}</if>
        </trim>
	</update>

    <update id="audit">
        update se_order
        <set>
            <if test="auditStatus != null">`audit_status` = #{auditStatus}, </if>
            <if test="auditId != null">`audit_id` = #{auditId}, </if>
            <if test="auditName != null">`audit_name` = #{auditName} </if>
        </set>
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="billNo != null"> and bill_no = #{billNo} </if>
            <if test="auditStatus != null"> and audit_status != #{auditStatus} </if>
            <if test="ids != null and ids.size() > 0">  and id in
                <foreach item="id" collection="ids" open="(" separator="," close=")"> #{id} </foreach>
            </if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach item="billNo" collection="billNos" open="(" separator="," close=")"> #{billNo} </foreach>
            </if>
        </trim>
    </update>

	<delete id="remove">
		delete from se_order where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from se_order where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

    <delete id="delete">
        delete from se_order
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="billDate != null and billDate != ''">and bill_date= #{billDate}</if>
            <if test="billNo != null and billNo != ''">and bill_no =#{billNo}</if>
            <if test="billType != null and billType != ''">and bill_type= #{billType}</if>
            <if test="consumerId != null and consumerId != ''">and consumer_id= #{consumerId}</if>
            <if test="consumerName != null and consumerName != ''">and consumer_name = #{consumerName}</if>
            <if test="status != null and status != ''">and status =#{status}</if>
            <if test="settleAccount != null and settleAccount != ''">andsettle_account = #{settleAccount}</if>
            <if test="billerId != null and billerId != ''">and biller_id= #{billerId}</if>
            <if test="auditStatus != null and auditStatus != ''">andaudit_status = #{auditStatus}</if>
            <if test="status != null and status != ''">and status =#{status}</if>
            <if test="audit != null and audit != ''">andaudit_status = #{audit}</if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach collection="billNos" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </delete>
</mapper>