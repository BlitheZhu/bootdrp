<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modular.rp.dao.PointEntryDao">

    <select id="listG" resultType="com.bootdo.modular.rp.domain.PointEntryDO">
        SELECT
            MAX(`id`)           AS id,
            `consumer_id`,
            `consumer_name`,
            `source`,
            SUM(`point`)        AS point,
            `remark`,
            `status`,
            `relate_no`,
            SUM(`total_amount`) AS total_amount,
            `create_time`,
            `update_time`
        FROM
            rp_point_entry
        <where>
            <if test="consumerId != null and consumerId != ''"> and consumer_id = #{consumerId} </if>
            <if test="consumerName != null and consumerName != ''"> and consumer_name = #{consumerName} </if>
            <if test="source != null and source != ''"> and source = #{source} </if>
            <if test="point != null and point != ''"> and point = #{point} </if>
            <if test="remark != null and remark != ''"> and remark = #{remark} </if>
            <if test="status != null and status != ''"> and status = #{status} </if>
            <if test="relateNo != null and relateNo != ''"> and relate_no = #{relateNo} </if>
            <if test="totalAmount != null and totalAmount != ''"> and total_amount = #{totalAmount} </if>
            <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
            <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
            <if test="type != null and type == 'INCOME'"> and point >= 0 </if>
            <if test="type != null and type == 'OUTCOME'"> and point <![CDATA[ < ]]> 0 </if>
            <if test="start != null and start != ''"> and create_time >= #{start} </if>
            <if test="end != null and end != ''"> and create_time <![CDATA[ <= ]]> #{end} </if>
            <if test="searchText != null and searchText != ''"> and ( consumer_name like '%${searchText}%' or remark like '%${searchText}%')</if>
        </where>
        GROUP BY consumer_id
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

</mapper>