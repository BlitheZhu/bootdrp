<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modular.rp.dao.RPOrderEntryDao">

	<select id="get" resultType="com.bootdo.modular.rp.domain.RPOrderEntryDO">
		select `id`,`bill_no`,`src_bill_date`,`src_bill_type`,`src_bill_no`,`src_total_amount`,`src_payment_amount`,`check_amount`,`create_time`,`update_time` from rp_order_entry where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.modular.rp.domain.RPOrderEntryDO">
		select `id`,`bill_no`,`src_bill_date`,`src_bill_type`,`src_bill_no`,`src_total_amount`,`src_payment_amount`,`check_amount`,`create_time`,`update_time` from rp_order_entry
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
		  		  <if test="srcBillDate != null and srcBillDate != ''"> and src_bill_date = #{srcBillDate} </if>
		  		  <if test="srcBillType != null and srcBillType != ''"> and src_bill_type = #{srcBillType} </if>
		  		  <if test="srcBillNo != null and srcBillNo != ''"> and src_bill_no = #{srcBillNo} </if>
		  		  <if test="srcTotalAmount != null and srcTotalAmount != ''"> and src_total_amount = #{srcTotalAmount} </if>
		  		  <if test="srcPaymentAmount != null and srcPaymentAmount != ''"> and src_payment_amount = #{srcPaymentAmount} </if>
		  		  <if test="checkAmount != null and checkAmount != ''"> and check_amount = #{checkAmount} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
                  <if test="billNos != null and billNos.size()>0"> and bill_no in
                      <foreach collection="billNos" index="index" item="item" open="(" separator="," close=")">
                          #{item}
                      </foreach>
                  </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from rp_order_entry
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
		  		  <if test="srcBillDate != null and srcBillDate != ''"> and src_bill_date = #{srcBillDate} </if>
		  		  <if test="srcBillType != null and srcBillType != ''"> and src_bill_type = #{srcBillType} </if>
		  		  <if test="srcBillNo != null and srcBillNo != ''"> and src_bill_no = #{srcBillNo} </if>
		  		  <if test="srcTotalAmount != null and srcTotalAmount != ''"> and src_total_amount = #{srcTotalAmount} </if>
		  		  <if test="srcPaymentAmount != null and srcPaymentAmount != ''"> and src_payment_amount = #{srcPaymentAmount} </if>
		  		  <if test="checkAmount != null and checkAmount != ''"> and check_amount = #{checkAmount} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.modular.rp.domain.RPOrderEntryDO" useGeneratedKeys="true" keyProperty="id">
		insert into rp_order_entry
		(
            `bill_no`,`src_bill_date`,`src_bill_type`,`src_bill_no`,`src_total_amount`,
            `src_payment_amount`,`check_amount`
		)
		values
		(
            #{billNo},#{srcBillDate},#{srcBillType},#{srcBillNo},#{srcTotalAmount},
            #{srcPaymentAmount},#{checkAmount}
		)
	</insert>

    <insert id ="saveBatch" parameterType="java.util.List" >
        insert into rp_order_entry
        (
            `bill_no`,`src_bill_date`,`src_bill_type`,`src_bill_no`,`src_total_amount`,
            `src_payment_amount`,`check_amount`
        )
        values
        <foreach collection ="list" item="item" index= "index" separator =",">
            (
            #{item.billNo},#{item.srcBillDate},#{item.srcBillType},#{item.srcBillNo},#{item.srcTotalAmount},
            #{item.srcPaymentAmount},#{item.checkAmount}
            )
        </foreach >
    </insert>


	<update id="update" parameterType="com.bootdo.modular.rp.domain.RPOrderEntryDO">
		update rp_order_entry 
		<set>
			<if test="billNo != null">`bill_no` = #{billNo}, </if>
			<if test="srcBillDate != null">`src_bill_date` = #{srcBillDate}, </if>
			<if test="srcBillType != null">`src_bill_type` = #{srcBillType}, </if>
			<if test="srcBillNo != null">`src_bill_no` = #{srcBillNo}, </if>
			<if test="srcTotalAmount != null">`src_total_amount` = #{srcTotalAmount}, </if>
			<if test="srcPaymentAmount != null">`src_payment_amount` = #{srcPaymentAmount}, </if>
			<if test="checkAmount != null">`check_amount` = #{checkAmount} </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from rp_order_entry where id = #{value}
	</delete>

    <delete id="delete">
        delete from rp_order_entry
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
            <if test="srcBillDate != null and srcBillDate != ''"> and src_bill_date = #{srcBillDate} </if>
            <if test="srcBillType != null and srcBillType != ''"> and src_bill_type = #{srcBillType} </if>
            <if test="srcBillNo != null and srcBillNo != ''"> and src_bill_no = #{srcBillNo} </if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach collection="billNos" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </delete>

</mapper>