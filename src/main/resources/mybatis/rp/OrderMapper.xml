<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.rp.dao.RPOrderDao">

	<select id="get" resultType="com.bootdo.rp.domain.RPOrderDO">
		select `id`,`bill_date`,`bill_no`,`bill_type`,`debtor_id`,`debtor_name`,`check_id`,`check_name`,`debt_amount`,`payment_amount`,`check_amount`,`discount_amount`,`audit_status`,`audit_id`,`audit_name`,`bill_source`,`remark`,`create_time`,`update_time` from rp_order where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.rp.domain.RPOrderDO">
		select `id`,`bill_date`,`bill_no`,`bill_type`,`debtor_id`,`debtor_name`,`check_id`,`check_name`,`debt_amount`,`payment_amount`,`check_amount`,`discount_amount`,`audit_status`,`audit_id`,`audit_name`,`bill_source`,`remark`,`create_time`,`update_time` from rp_order
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="billDate != null and billDate != ''"> and bill_date = #{billDate} </if>
		  		  <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
		  		  <if test="billType != null and billType != ''"> and bill_type = #{billType} </if>
		  		  <if test="debtorId != null and debtorId != ''"> and debtor_id = #{debtorId} </if>
		  		  <if test="debtorName != null and debtorName != ''"> and debtor_name = #{debtorName} </if>
		  		  <if test="checkId != null and checkId != ''"> and check_id = #{checkId} </if>
		  		  <if test="checkName != null and checkName != ''"> and check_name = #{checkName} </if>
		  		  <if test="debtAmount != null and debtAmount != ''"> and debt_amount = #{debtAmount} </if>
		  		  <if test="paymentAmount != null and paymentAmount != ''"> and payment_amount = #{paymentAmount} </if>
		  		  <if test="checkAmount != null and checkAmount != ''"> and check_amount = #{checkAmount} </if>
		  		  <if test="discountAmount != null and discountAmount != ''"> and discount_amount = #{discountAmount} </if>
		  		  <if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
		  		  <if test="auditId != null and auditId != ''"> and audit_id = #{auditId} </if>
		  		  <if test="auditName != null and auditName != ''"> and audit_name = #{auditName} </if>
                  <if test="billSource != null and billSource != ''"> and bill_source = #{billSource} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
                  <if test="searchText != null and searchText != ''">
                      and (
                            bill_no like '%${searchText}%' or debtor_name like '%${searchText}%' or remark like '%${searchText}%'
                            or exists (SELECT 1 FROM rp_order_entry b WHERE rp_order.`bill_no`=b.bill_no AND b.src_bill_no = #{searchText})
                      )
                  </if>
                  <if test="start != null and start != ''"> and bill_date >= #{start} </if>
                  <if test="end != null and end != ''"> <![CDATA[ and bill_date <= #{end} ]]> </if>
                  <if test="audit != null and audit != ''"> and audit_status = #{audit} </if>
                  <if test="srcBillNo != null and srcBillNo != ''"> and exists (SELECT 1 FROM rp_order_entry b WHERE rp_order.`bill_no`=b.bill_no AND b.src_bill_no = #{srcBillNo}) </if>
                  <if test="srcBillNos != null and srcBillNos.size() > 0">
                      and exists (SELECT 1 FROM rp_order_entry b WHERE rp_order.`bill_no`=b.bill_no AND b.src_bill_no in
                      <foreach item="sBillNo" collection="srcBillNos" open="(" separator="," close="))"> #{sBillNo} </foreach>
                  </if>
                  <if test="statusNot != null and statusNot.size() > 0"> and status not in
                      <foreach item="status" collection="statusNot" open="(" separator="," close=")"> #{status} </foreach>
                  </if>
                  <if test="billNos != null and billNos.size() > 0"> and bill_no in
                      <foreach item="billNo" collection="billNos" open="(" separator="," close=")"> #{billNo} </foreach>
                  </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by bill_date desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from rp_order
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="billDate != null and billDate != ''"> and bill_date = #{billDate} </if>
		  		  <if test="billNo != null and billNo != ''"> and bill_no = #{billNo} </if>
		  		  <if test="billType != null and billType != ''"> and bill_type = #{billType} </if>
		  		  <if test="debtorId != null and debtorId != ''"> and debtor_id = #{debtorId} </if>
		  		  <if test="debtorName != null and debtorName != ''"> and debtor_name = #{debtorName} </if>
		  		  <if test="checkId != null and checkId != ''"> and check_id = #{checkId} </if>
		  		  <if test="checkName != null and checkName != ''"> and check_name = #{checkName} </if>
		  		  <if test="debtAmount != null and debtAmount != ''"> and debt_amount = #{debtAmount} </if>
		  		  <if test="paymentAmount != null and paymentAmount != ''"> and payment_amount = #{paymentAmount} </if>
		  		  <if test="checkAmount != null and checkAmount != ''"> and check_amount = #{checkAmount} </if>
		  		  <if test="discountAmount != null and discountAmount != ''"> and discount_amount = #{discountAmount} </if>
		  		  <if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
		  		  <if test="auditId != null and auditId != ''"> and audit_id = #{auditId} </if>
		  		  <if test="auditName != null and auditName != ''"> and audit_name = #{auditName} </if>
                  <if test="billSource != null and billSource != ''"> and bill_source = #{billSource} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
                 <if test="searchText != null and searchText != ''"> and ( bill_no like '%${searchText}%' or  debtor_name like '%${searchText}%' or remark like '%${searchText}%')</if>
                 <if test="start != null and start != ''"> and create_time >= #{start} </if>
                 <if test="end != null and end != ''"> <![CDATA[ and create_time <= #{end} ]]> </if>
                 <if test="audit != null and audit != ''"> and audit_status = #{audit} </if>
                 <if test="srcBillNo != null and srcBillNo != ''"> and exists (SELECT 1 FROM rp_order_entry b WHERE rp_order.`bill_no`=b.bill_no AND b.src_bill_no = #{srcBillNo}) </if>
                 <if test="srcBillNos != null and srcBillNos.size() > 0">
                     and exists (SELECT 1 FROM rp_order_entry b WHERE rp_order.`bill_no`=b.bill_no AND b.src_bill_no in
                     <foreach item="sBillNo" collection="srcBillNos" open="(" separator="," close="))"> #{sBillNo} </foreach>
                 </if>
                 <if test="statusNot != null and statusNot.size() > 0"> and status not in
                     <foreach item="status" collection="statusNot" open="(" separator="," close=")"> #{status} </foreach>
                 </if>
                 <if test="billNos != null and billNos.size() > 0"> and bill_no in
                     <foreach item="billNo" collection="billNos" open="(" separator="," close=")"> #{billNo} </foreach>
                 </if>
		  		</where>
	</select>

    <select id="countRP" resultType="int">
        SELECT COUNT(0) FROM rp_order a LEFT JOIN rp_order_entry b ON a.`bill_no` = b.`bill_no` LEFT JOIN rp_order_settle c ON a.`bill_no` = c.`bill_no`
        <where>
            <if test="billDate != null and billDate != ''"> and a.bill_date = #{billDate} </if>
            <if test="billNo != null and billNo != ''"> and a.bill_no = #{billNo} </if>
            <if test="billType != null and billType != ''"> and a.bill_type = #{billType} </if>
            <if test="auditStatus != null and auditStatus != ''"> and a.audit_status = #{auditStatus} </if>
            <if test="billSource != null and billSource != ''"> and a.bill_source = #{billSource} </if>
            <if test="billSource != null and billSource != ''"> and a.bill_source = #{billSource} </if>
            <if test="billSource != null and billSource != ''"> and a.bill_source = #{billSource} </if>
            <if test="srcBillNo != null and srcBillNo != ''"> and b.src_bill_no = #{srcBillNo} </if>
            <if test="settleAccount != null and settleAccount != ''"> and c.settle_account = #{settleAccount} </if>
        </where>
    </select>
	 
	<insert id="save" parameterType="com.bootdo.rp.domain.RPOrderDO" useGeneratedKeys="true" keyProperty="id">
		insert into rp_order
		(
            `bill_date`,`bill_no`,`bill_type`,`debtor_id`,`debtor_name`,`check_id`,`check_name`,`debt_amount`,`payment_amount`,`check_amount`,
            `discount_amount`,`audit_status`,`audit_id`,`audit_name`,`bill_source`,`remark`
		)
		values
		(
            #{billDate},#{billNo},#{billType},#{debtorId},#{debtorName},#{checkId},#{checkName},#{debtAmount},#{paymentAmount},#{checkAmount},
            #{discountAmount},#{auditStatus},#{auditId},#{auditName},#{billSource},#{remark}
		)
		ON DUPLICATE KEY UPDATE
        bill_date= VALUES(bill_date),bill_type= VALUES(bill_type),debtor_id= VALUES(debtor_id),debtor_name= VALUES(debtor_name),check_id= VALUES(check_id),check_name= VALUES(check_name),debt_amount= VALUES(debt_amount),payment_amount= VALUES(payment_amount),
        check_amount= VALUES(check_amount),discount_amount= VALUES(discount_amount),audit_status= VALUES(audit_status),audit_id= VALUES(audit_id),audit_name= VALUES(audit_name),bill_source= VALUES(bill_source),remark= VALUES(remark)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.rp.domain.RPOrderDO">
		update rp_order 
		<set>
			<if test="billDate != null">`bill_date` = #{billDate}, </if>
			<if test="billNo != null">`bill_no` = #{billNo}, </if>
			<if test="billType != null">`bill_type` = #{billType}, </if>
			<if test="debtorId != null">`debtor_id` = #{debtorId}, </if>
			<if test="debtorName != null">`debtor_name` = #{debtorName}, </if>
			<if test="checkId != null">`check_id` = #{checkId}, </if>
			<if test="checkName != null">`check_name` = #{checkName}, </if>
			<if test="debtAmount != null">`debt_amount` = #{debtAmount}, </if>
			<if test="paymentAmount != null">`payment_amount` = #{paymentAmount}, </if>
			<if test="checkAmount != null">`check_amount` = #{checkAmount}, </if>
			<if test="discountAmount != null">`discount_amount` = #{discountAmount}, </if>
			<if test="auditStatus != null">`audit_status` = #{auditStatus}, </if>
			<if test="auditId != null">`audit_id` = #{auditId}, </if>
			<if test="auditName != null">`audit_name` = #{auditName}, </if>
            <if test="billSource != null"> and bill_source = #{billSource}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>

    <update id="audit">
        update rp_order
        <set>
            <if test="auditStatus != null">`audit_status` = #{auditStatus}, </if>
            <if test="auditId != null">`audit_id` = #{auditId}, </if>
            <if test="auditName != null">`audit_name` = #{auditName} </if>
        </set>
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="billNo != null"> and bill_no = #{billNo} </if>
            <if test="auditStatus != null"> and audit_status != #{auditStatus} </if>
            <if test="ids != null and ids.size() > 0">  and id in
                <foreach item="id" collection="ids" open="(" separator="," close=")"> #{id} </foreach>
            </if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach item="billNo" collection="billNos" open="(" separator="," close=")"> #{billNo} </foreach>
            </if>
        </trim>
    </update>

	<delete id="remove">
		delete from rp_order where id = #{value}
	</delete>
	
    <delete id="delete">
        delete from rp_order
        <trim prefix="where 0=1 or (" prefixOverrides="and|or" suffix=")">
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="billDate != null and billDate != ''"> and bill_date = #{billDate} </if>
            <if test="billNo != null and billNo != ''">and bill_no =#{billNo}</if>
            <if test="billType != null and billType != ''"> and bill_type = #{billType} </if>
            <if test="debtorId != null and debtorId != ''"> and debtor_id = #{debtorId} </if>
            <if test="debtorName != null and debtorName != ''"> and debtor_name = #{debtorName} </if>
            <if test="checkId != null and checkId != ''"> and check_id = #{checkId} </if>
            <if test="checkName != null and checkName != ''"> and check_name = #{checkName} </if>
            <if test="debtAmount != null and debtAmount != ''"> and debt_amount = #{debtAmount} </if>
            <if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
            <if test="auditId != null and auditId != ''"> and audit_id = #{auditId} </if>
            <if test="auditName != null and auditName != ''"> and audit_name = #{auditName} </if>
            <if test="billSource != null and billSource != ''"> and bill_source = #{billSource} </if>
            <if test="srcBillNo != null and srcBillNo != ''"> and exists (SELECT 1 FROM rp_order_entry b WHERE rp_order.`bill_no`=b.bill_no AND b.src_bill_no = #{srcBillNo}) </if>
            <if test="billNos != null and billNos.size() > 0"> and bill_no in
                <foreach collection="billNos" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </trim>
    </delete>

</mapper>