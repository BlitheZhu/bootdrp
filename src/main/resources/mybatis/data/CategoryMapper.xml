<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modular.data.dao.CategoryDao">

	<select id="get" resultType="com.bootdo.modular.data.domain.CategoryDO">
		select `category_id`,`parent_id`,`name`,`order_num`,`type`,`status` from data_category where category_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.modular.data.domain.CategoryDO">
		select `category_id`,`parent_id`,`name`,`order_num`,`type`,`status` from data_category a
        <where>  
		  		  <if test="categoryId != null and categoryId != ''"> and category_id = #{categoryId} </if>
		  		  <if test="parentId != null and parentId != ''"> and parent_id = #{parentId} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="orderNum != null and orderNum != ''"> and order_num = #{orderNum} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
                  <if test="leaf != null and status == true"> and NOT EXISTS (SELECT 1 FROM data_category b WHERE a.`category_id` = b.`parent_id`) } </if>
                  <if test="types != null and types != ''"> and type in <foreach item="type" collection="types" open="(" separator="," close=")"> #{type} </foreach> </if>
                </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by parent_id, order_num
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="listTreeData" resultType="java.util.HashMap">
        SELECT * FROM (
            SELECT a.`category_id` AS categoryId,a.`parent_id` AS parentId,a.`name` AS name,a.`type` AS type,a.`order_num` AS orderNum,b.`no` AS dataId,b.`name` AS dataName,b.`status` AS status FROM data_category a LEFT JOIN `data_product` b ON a.`category_id`=b.`type`
                UNION ALL
            SELECT a.`category_id` AS categoryId,a.`parent_id` AS parentId,a.`name` AS name,a.`type` AS type,a.`order_num` AS orderNum,b.`no` AS dataId,b.`name` AS dataName,b.`status` AS status FROM data_category a LEFT JOIN `data_consumer` b ON a.`category_id`=b.`type`
                UNION ALL
            SELECT a.`category_id` AS categoryId,a.`parent_id` AS parentId,a.`name` AS name,a.`type` AS type,a.`order_num` AS orderNum,b.`no` AS dataId,b.`name` AS dataName,b.`status` AS status FROM data_category a LEFT JOIN `data_vendor` b ON a.`category_id`=b.`type`
                UNION ALL
            SELECT a.`category_id` AS categoryId,a.`parent_id` AS parentId,a.`name` AS name,a.`type` AS type,a.`order_num` AS orderNum,b.`no` AS dataId,b.`name` AS dataName,b.`status` AS status FROM data_category a LEFT JOIN `data_account` b ON a.`category_id`=b.`type`
                UNION ALL
            SELECT a.`dept_id` AS categoryId,a.`parent_id` AS parentId,a.`name` AS name,'USER' AS type,a.`order_num` AS orderNum,b.`user_id` AS dataId,b.`name` AS dataName,b.`status` AS status FROM sys_dept a LEFT JOIN sys_user b ON a.`dept_id`=b.`dept_id`
        ) aa
        <where>
            <if test="categoryId != null and categoryId != ''"> and category_id = #{categoryId} </if>
            <if test="parentId != null and parentId != ''"> and parent_id = #{parentId} </if>
            <if test="name != null and name != ''"> and name = #{name} </if>
            <if test="type != null and type != ''"> and type = #{type} </if>
            <if test="status != null and status != ''"> and status = #{status} </if>
            <if test="types != null and types != ''"> and type in <foreach item="type" collection="types" open="(" separator="," close=")"> #{type} </foreach> </if>
            and dataId IS NOT NULL
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by parentId, orderNum
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

 	<select id="count" resultType="int">
		select count(*) from data_category
		 <where>  
		  		  <if test="categoryId != null and categoryId != ''"> and categoryId = #{categoryId} </if>
		  		  <if test="parentId != null and parentId != ''"> and parentId = #{parentId} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="orderNum != null and orderNum != ''"> and orderNum = #{orderNum} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.modular.data.domain.CategoryDO" useGeneratedKeys="true" keyProperty="categoryId">
		insert into data_category
		(
			`parent_id`, 
			`name`, 
			`order_num`, 
			`type`, 
			`status`
		)
		values
		(
			#{parentId}, 
			#{name}, 
			#{orderNum}, 
			#{type}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.modular.data.domain.CategoryDO">
		update data_category 
		<set>
			<if test="parentId != null">`parent_id` = #{parentId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="orderNum != null">`order_num` = #{orderNum}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where category_id = #{categoryId}
	</update>
	
	<delete id="remove">
		delete from data_category where category_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from data_category where category_id in 
		<foreach item="categoryId" collection="array" open="(" separator="," close=")">
			#{categoryId}
		</foreach>
	</delete>

</mapper>