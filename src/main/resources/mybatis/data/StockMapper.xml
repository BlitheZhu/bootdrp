<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modular.data.dao.StockDao">

	<select id="get" resultType="com.bootdo.modular.data.domain.StockDO">
		select `id`,`stock_no`,`stock_name`,`stock_address`,`status`,`create_time`,`update_time` from data_stock where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.modular.data.domain.StockDO">
		select `id`,`stock_no`,`stock_name`,`stock_address`,`status`,`create_time`,`update_time` from data_stock
		<where>
			<if test="id != null and id != ''">and id = #{id}</if>
			<if test="stockNo != null and stockNo != ''">and stock_no = #{stockNo}</if>
			<if test="stockName != null and stockName != ''">and stock_name = #{stockName}</if>
			<if test="stockAddress != null and stockAddress != ''">and stock_address = #{stockAddress}</if>
			<if test="status != null and status != ''">and status = #{status}</if>
			<if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
			<if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
			<if test="searchText != null and searchText != ''">and ( stock_no like '%${searchText}%' or stock_name like '%${searchText}%')</if>
			<if test="start != null and start != ''">and create_time >= #{start}</if>
			<if test="end != null and end != ''"> <![CDATA[ and create_time <= #{end} ]]> </if>
		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from data_stock
		 <where>  
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="stockNo != null and stockNo != ''"> and stock_no = #{stockNo} </if>
            <if test="stockName != null and stockName != ''"> and stock_name = #{stockName} </if>
            <if test="stockAddress != null and stockAddress != ''"> and stock_address = #{stockAddress} </if>
            <if test="status != null and status != ''"> and status = #{status} </if>
            <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
            <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
            <if test="searchText != null and searchText != ''"> and ( stock_no like '%${searchText}%' or  stock_name like '%${searchText}%')</if>
            <if test="start != null and start != ''"> and create_time >= #{start} </if>
            <if test="end != null and end != ''"> <![CDATA[ and create_time <= #{end} ]]> </if>
            <if test="idNot != null and idNot != ''"> and id != #{idNot} </if>
         </where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.modular.data.domain.StockDO" useGeneratedKeys="true" keyProperty="id">
		insert into data_stock
		(
			`stock_no`, 
			`stock_name`, 
			`stock_address`, 
			`status`
		)
		values
		(
			#{stockNo}, 
			#{stockName}, 
			#{stockAddress}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.modular.data.domain.StockDO">
		update data_stock 
		<set>
			<if test="stockNo != null">`stock_no` = #{stockNo}, </if>
			<if test="stockName != null">`stock_name` = #{stockName}, </if>
			<if test="stockAddress != null">`stock_address` = #{stockAddress}, </if>
			<if test="status != null">`status` = #{status} </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from data_stock where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from data_stock where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>